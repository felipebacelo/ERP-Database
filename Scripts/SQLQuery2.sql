USE ERP;

-- ÁREA CADASTROS COMPLEMENTARES --

-- CRIANDO TABELA EMPRESA
CREATE TABLE EMPRESA
	(
	COD_EMPRESA INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	NOME_EMPRESA VARCHAR(100),
	NOME_FANTASIA VARCHAR(100)
	);
-- CRIANDO TABELA UF
CREATE TABLE UF
	(
	COD_UF VARCHAR(2) NOT NULL PRIMARY KEY,
	NOME_UF VARCHAR(30) NOT NULL,
	);
-- CRIANDO TABELA CIDADE
CREATE TABLE CIDADE
	(
	COD_CIDADE VARCHAR(7) NOT NULL PRIMARY KEY,
	COD_UF VARCHAR(2) NOT NULL,
	NOME_CIDADE VARCHAR(70) NOT NULL,
	CONSTRAINT FK_CID1 FOREIGN KEY (COD_UF)
	REFERENCES UF (COD_UF)
	);
-- CRIANDO TABELA CLIENTES
CREATE TABLE CLIENTES
	(
	COD_EMPRESA INT NOT NULL,
	ID_CLIENTE INT IDENTITY(1,1) NOT NULL,
	RAZAO_CLIENTE VARCHAR(100) NOT NULL,
	NOME_FANTASIA VARCHAR(100) NOT NULL,
	ENDERECO VARCHAR(50) NOT NULL,
	NRO VARCHAR(10) NOT NULL,
	BAIRRO VARCHAR(20) NOT NULL,
	COD_CIDADE VARCHAR(7) NOT NULL,
	CEP VARCHAR(8),
	CNPJ_CPF VARCHAR(15),
	TIPO_CLIENTE NCHAR(1) CONSTRAINT CK_TC1 CHECK (TIPO_CLIENTE IN ('F', 'J')),
	DATA_CADASTRO DATETIME NOT NULL,
	COD_PAGTO INT,
	CONSTRAINT PK_CLI1 PRIMARY KEY (COD_EMPRESA, ID_CLIENTE),
	CONSTRAINT FK_CLI1 FOREIGN KEY (COD_CIDADE)
	REFERENCES CIDADE (COD_CIDADE),
	CONSTRAINT FK_CLI2 FOREIGN KEY (COD_EMPRESA)
	REFERENCES EMPRESA (COD_EMPRESA)
	);
-- CRIANDO TABELA FORNECEDORES
CREATE TABLE FORNECEDORES
	(
	COD_EMPRESA INT NOT NULL,
	ID_FORNECEDOR INT IDENTITY(1,1) NOT NULL,
	RAZAO_FORNECEDOR VARCHAR(100) NOT NULL,
	NOME_FANTASIA VARCHAR(100) NOT NULL,
	ENDERECO VARCHAR(50) NOT NULL,
	NRO VARCHAR(10) NOT NULL,
	BAIRRO VARCHAR(20) NOT NULL,
	COD_CIDADE VARCHAR(7) NOT NULL,
	CEP VARCHAR(8),
	CNPJ_CPF VARCHAR(15),
	TIPO_FORNECEDOR NCHAR(1) CONSTRAINT CK_TF1 CHECK (TIPO_FORNECEDOR IN ('F', 'J')),
	DATA_CADASTRO DATETIME NOT NULL,
	COD_PAGTO INT,
	CONSTRAINT PK_FOR1 PRIMARY KEY (COD_EMPRESA, ID_FORNECEDOR),
	CONSTRAINT FK_FOR1 FOREIGN KEY (COD_CIDADE)
	REFERENCES CIDADE (COD_CIDADE),
	CONSTRAINT FK_FOR2 FOREIGN KEY (COD_EMPRESA)
	REFERENCES EMPRESA (COD_EMPRESA)
	);
-- CRIANDO TABELA TIPO DE MATERIAL
CREATE TABLE TIPO_MAT
	(
    COD_EMPRESA INT NOT NULL,
	COD_TIPO_MAT INT NOT NULL,
	DESC_TIPO_MAT VARCHAR(20) NOT NULL,
	CONSTRAINT PK_TIP_M1 PRIMARY KEY (COD_EMPRESA, COD_TIPO_MAT),
	CONSTRAINT FK_TIP_M1 FOREIGN KEY (COD_EMPRESA)
	REFERENCES EMPRESA (COD_EMPRESA)
	);
-- CRIANDO TABELA MATERIAL
CREATE TABLE MATERIAL
	(
	COD_EMPRESA INT NOT NULL,
	COD_MAT INT NOT NULL,
	DESCRICAO VARCHAR(50) NOT NULL,
	PRECO_UNIT DECIMAL(10,2) NOT NULL,
	COD_TIPO_MAT INT NOT NULL,
	ID_FORNECEDOR INT,
	CONSTRAINT PK_MAT1 PRIMARY KEY (COD_EMPRESA, COD_MAT),
	CONSTRAINT FK_MAT1 FOREIGN KEY (COD_EMPRESA, COD_TIPO_MAT)
	REFERENCES TIPO_MAT (COD_EMPRESA, COD_TIPO_MAT)
	);
-- CRIANDO INDEX
CREATE INDEX IX_MAT ON MATERIAL (COD_EMPRESA, COD_TIPO_MAT);


-- ÁREA PRODUÇÃO --

-- CRIANDO TABELA ORDEM DE PRODUÇÃO
CREATE TABLE ORDEM_PROD
	(
	COD_EMPRESA INT NOT NULL,
	ID_ORDEM INT IDENTITY(1,1) NOT NULL,
	COD_MAT_PROD INT NOT NULL,
	QTD_PLAN DECIMAL(10,2) NOT NULL,
	QTD_PROD DECIMAL(10,2) NOT NULL,
	DATA_INI DATE,
	DATA_FIM DATE,
	SITUACAO CHAR(1), -- (A-ABERTA, P-PLANEJADA, F-FECHADA)
	CONSTRAINT PK_OP1 PRIMARY KEY (COD_EMPRESA, ID_ORDEM),
    CONSTRAINT FK_OP1 FOREIGN KEY (COD_EMPRESA, COD_MAT_PROD)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT),
	);
-- CRIANDO TABELA APONTAMENTOS DE PRODUÇÃO
CREATE TABLE APONTAMENTOS
	(
	COD_EMPRESA INT NOT NULL,
	ID_APON INT IDENTITY(1,1) NOT NULL,
	ID_ORDEM INT NOT NULL,
	COD_MAT_PROD INT,
	QTD_APON DECIMAL(10,2),
	DATA_APON DATETIME NOT NULL,
	CONSTRAINT FK_APON1 FOREIGN KEY (COD_EMPRESA, COD_MAT_PROD)
	REFERENCES MATERIAL(COD_EMPRESA, COD_MAT),
	CONSTRAINT FK_APON2 FOREIGN KEY (COD_EMPRESA, ID_ORDEM)
	REFERENCES ORDEM_PROD (COD_EMPRESA, ID_ORDEM),
	CONSTRAINT PK_APON1 PRIMARY KEY (COD_EMPRESA, ID_APON)
	);
-- CRIANDO TABELA FICHA TÉCNICA
CREATE TABLE FICHA_TECNICA
	(
	COD_EMPRESA INT NOT NULL,
	ID_REF INT IDENTITY NOT NULL PRIMARY KEY,
	COD_MAT_PROD INT NOT NULL,
	COD_MAT_NECES INT NOT NULL,
	QTD_NECES DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_FIC1 FOREIGN KEY (COD_EMPRESA, COD_MAT_PROD)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT),
	CONSTRAINT FK_FIC2 FOREIGN KEY (COD_EMPRESA, COD_MAT_NECES)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT)
	);
-- CRIANDO TABELA DE CONSUMO
CREATE TABLE CONSUMO
	(
	COD_EMPRESA INT NOT NULL,
	ID_APON INT NOT NULL,
	COD_MAT_NECES INT NOT NULL,
	QTD_CONSUMIDA DECIMAL(10,2) NOT NULL,
	LOTE VARCHAR(20) NOT NULL,
	CONSTRAINT FK_CONS1 FOREIGN KEY (COD_EMPRESA, COD_MAT_NECES)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT),
	CONSTRAINT FK_CONS2 FOREIGN KEY (COD_EMPRESA, ID_APON)
	REFERENCES APONTAMENTOS (COD_EMPRESA, ID_APON)
	);


-- ÁREA SUPRIMENTOS --

-- CRIANDO TABELA ESTOQUE 
CREATE TABLE ESTOQUE
	(
	COD_EMPRESA INT NOT NULL,
    COD_MAT INT NOT NULL ,
	QTD_SALDO DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_EST1 FOREIGN KEY (COD_EMPRESA, COD_MAT)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT),
	CONSTRAINT PK_EST1 PRIMARY KEY (COD_EMPRESA, COD_MAT)
	);
-- CRIANDO TABELA ESTOQUE LOTE
CREATE TABLE ESTOQUE_LOTE
	(
	COD_EMPRESA INT NOT NULL,
	COD_MAT INT NOT NULL,
	LOTE VARCHAR(20) NOT NULL,
	QTD_LOTE DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_ESTL1 PRIMARY KEY (COD_EMPRESA, COD_MAT,LOTE),
	CONSTRAINT FK_ESTL1 FOREIGN KEY (COD_EMPRESA, COD_MAT)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT)
	);
-- CRIANDO TABELA MOVIMENTAÇÃO DE ESTOQUE
	CREATE TABLE ESTOQUE_MOV
	(
	COD_EMPRESA INT NOT NULL,
	ID_MOV INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	TIP_MOV VARCHAR(1),	-- (S-SAÍDA, E-ENTRADA)
	COD_MAT INT NOT NULL,
	LOTE  VARCHAR(20) NOT NULL,
	QTD DECIMAL(10,2) NOT NULL,
	DATA_MOV DATE NOT NULL,
	DATA_HORA DATETIME NOT NULL,
	CONSTRAINT FK_ESTM1 FOREIGN KEY (COD_EMPRESA, COD_MAT)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT)
	);
-- CRIANDO TABELA PEDIDO DE COMPRAS	
CREATE TABLE PED_COMPRAS
	(
	COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT NOT NULL,
	ID_FORNECEDOR INT NOT NULL,
	COD_PAGTO INT NOT NULL,  	
	DATA_PEDIDO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	SITUACAO NCHAR(1) NOT NULL,
	TOTAL_PED DECIMAL(10,2),
	CONSTRAINT FK_PEDC1 FOREIGN KEY (COD_EMPRESA, ID_FORNECEDOR)
	REFERENCES FORNECEDORES (COD_EMPRESA, ID_FORNECEDOR),
	CONSTRAINT PK_PEDC1 PRIMARY KEY (COD_EMPRESA, NUM_PEDIDO)
	);
-- CRIANDO TABELA PEDIDO DE COMPRAS ITENS
CREATE TABLE PED_COMPRAS_ITENS
	(
	COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT NOT NULL,
	SEQ_MAT INT NOT NULL,
	COD_MAT INT NOT NULL,
	QTD     INT NOT NULL,
	VAL_UNIT DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_PEDCIT1 PRIMARY KEY (COD_EMPRESA, NUM_PEDIDO, SEQ_MAT),
	CONSTRAINT FK_PEDIT1 FOREIGN KEY (COD_EMPRESA, NUM_PEDIDO)
	REFERENCES PED_COMPRAS (COD_EMPRESA, NUM_PEDIDO),
	CONSTRAINT FK_PEDIT2 FOREIGN KEY (COD_EMPRESA, COD_MAT)
	REFERENCES MATERIAL (COD_EMPRESA, COD_MAT)
	);
	

-- ÁREA RH --

-- CRIANDO TABELA CENTRO DE CUSTO
CREATE TABLE CENTRO_CUSTO
	(
	COD_EMPRESA INT NOT NULL,
	COD_CC VARCHAR(4) NOT NULL,
	NOME_CC VARCHAR(20) NOT NULL,
	CONSTRAINT PK_CC1 PRIMARY KEY (COD_EMPRESA, COD_CC),
	CONSTRAINT FK_CC1 FOREIGN KEY (COD_EMPRESA)
	REFERENCES EMPRESA (COD_EMPRESA)
	);
-- CRIANDO TABELA CARGOS
CREATE TABLE CARGOS
	(
	COD_EMPRESA INT NOT NULL,
	COD_CARGO INT IDENTITY(1,1) NOT NULL,
	NOME_CARGO VARCHAR(50),
	CONSTRAINT PK_CARG1 PRIMARY KEY (COD_EMPRESA, COD_CARGO),
	CONSTRAINT FK_CARG1 FOREIGN KEY (COD_EMPRESA)
	REFERENCES EMPRESA (COD_EMPRESA)
	);
-- CRIANDO TABELA FUNCIONÁRIO
CREATE TABLE FUNCIONARIO
	(
	COD_EMPRESA INT NOT NULL,
	MATRICULA INT  NOT NULL,
	COD_CC VARCHAR(4) NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	RG VARCHAR(15) NOT NULL,
	CPF VARCHAR(15) NOT NULL,
	ENDERECO VARCHAR(50)NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	BAIRRO VARCHAR(50) NOT NULL,
	COD_CIDADE VARCHAR(7) NOT NULL,
	DATA_ADMISS DATE NOT NULL,
	DATE_DEMISS DATE,
	DATA_NASC DATE NOT NULL,
	TELEFONE VARCHAR(15) NOT NULL,
	COD_CARGO INT NOT NULL,
	CONSTRAINT FK_FUNC1 FOREIGN KEY (COD_EMPRESA, COD_CC)
	REFERENCES CENTRO_CUSTO (COD_EMPRESA, COD_CC),
	CONSTRAINT FK_FUNC2 FOREIGN KEY (COD_CIDADE)
	REFERENCES CIDADE (COD_CIDADE),
	CONSTRAINT FK_FUNC3 FOREIGN KEY (COD_EMPRESA, COD_CARGO)
	REFERENCES CARGOS (COD_EMPRESA, COD_CARGO),
	CONSTRAINT PK_FUNC1 PRIMARY KEY (COD_EMPRESA, MATRICULA),
	);
-- CRIANDO TABELA SALÁRIO
CREATE TABLE SALARIO
	(
	COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
	SALARIO DECIMAL(10,2)NOT NULL,
	CONSTRAINT FK_SAL2 FOREIGN KEY (COD_EMPRESA, MATRICULA)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA),
	CONSTRAINT PK_SAL1 PRIMARY KEY (COD_EMPRESA, MATRICULA),
	);
-- CRIANDO TABELA FOLHA DE PAGAMENTO
CREATE TABLE FOLHA_PAGTO
	(
	COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
	TIPO_PGTO CHAR(1) NOT NULL, -- (M-FOLHA, A-ADIANTAMENTO, F-FÉRIAS, D-13º, R-RESCISÃO)
	TIPO CHAR(1)  NOT NULL, -- (P-PROVENTOS, D-DESCONTOS)
	EVENTO VARCHAR(30) NOT NULL,
	MES_REF VARCHAR(2)NOT NULL,
	ANO_REF VARCHAR(4)NOT NULL,
	DATA_PAGTO DATE NOT NULL,
	VALOR DECIMAL(10,2) NOT NULL,
    CONSTRAINT FK_FP1 FOREIGN KEY (COD_EMPRESA, MATRICULA)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA)
	);
-- CRIANDO INDEX
CREATE INDEX IX1_FOLHA ON FOLHA_PAGTO (COD_EMPRESA, MATRICULA);


-- ARÉA SEGURANÇA --

-- CRIANDO TABELA USUÁRIOS 
CREATE TABLE USUARIOS
	(
	COD_EMPRESA INT NOT NULL,
	LOGIN VARCHAR(30) NOT NULL PRIMARY KEY,
	MATRICULA INT NOT NULL,
	SENHA VARCHAR(32) NOT NULL,
	SITUACAO CHAR(1) NOT NULL, -- (A-ATIVO, B-BLOQUEADO)
	CONSTRAINT FK_US1 FOREIGN KEY (COD_EMPRESA, MATRICULA)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA)
	);


-- ÁREA FINANCEIRO --

-- CRIANDO TABELA CONTAS A RECEBER
CREATE TABLE CONTAS_RECEBER
	(
	COD_EMPRESA INT NOT NULL,
	ID_DOC INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    ID_CLIENTE INT NOT NULL,
	ID_DOC_ORIG INT NOT NULL,
	PARC INT NOT NULL,
	DATA_VENC DATE NOT NULL,
	DATA_PAGTO DATE,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_CR1 FOREIGN KEY (COD_EMPRESA, ID_CLIENTE)
	REFERENCES CLIENTES (COD_EMPRESA, ID_CLIENTE)
	);
-- CRIANDO TABELA CONTAS A PAGAR
CREATE TABLE CONTAS_PAGAR
	(
	COD_EMPRESA INT NOT NULL,
	ID_DOC INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    ID_FORNECEDOR INT NOT NULL,
	ID_DOC_ORIG INT NOT NULL,
	PARC INT NOT NULL,
	DATA_VENC DATE NOT NULL,
	DATA_PAGTO DATE,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_CP1 FOREIGN KEY (COD_EMPRESA, ID_FORNECEDOR)
	REFERENCES FORNECEDORES (COD_EMPRESA, ID_FORNECEDOR)
	);
-- CRIANDO TABELA CONDIÇÃO DE PAGAMENTO
CREATE TABLE COND_PAGTO
	(
	COD_PAGTO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	NOME_CP VARCHAR(50) NOT NULL,
	);
-- CRIANDO TABELA CONDIÇÃO DE PAGAMENTO COM PARCELA
CREATE TABLE COND_PAGTO_DET
	(
	COD_PAGTO INT NOT NULL,
	PARC INT NOT NULL,
	DIAS INT NOT NULL,
	PCT  DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_CONDP1 FOREIGN KEY (COD_PAGTO)
	REFERENCES COND_PAGTO (COD_PAGTO)
	);


-- ÁREA COMERCIAL --

-- CRIANDO TABELA PEDIDO DE VENDAS
CREATE TABLE PED_VENDAS
	(
	COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT  NOT NULL,
	ID_CLIENTE INT NOT NULL,
	COD_PAGTO INT NOT NULL,
	DATA_PEDIDO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	SITUACAO NCHAR(1) NOT NULL, -- (A-ABERTO, P-PLANEJADO, F-FINALIZADO)
	TOTAL_PED DECIMAL(10,2),
	CONSTRAINT FK_PV1 FOREIGN KEY (COD_EMPRESA, ID_CLIENTE)
	REFERENCES CLIENTES (COD_EMPRESA, ID_CLIENTE),
	CONSTRAINT FK_PV2 FOREIGN KEY (COD_PAGTO)
	REFERENCES COND_PAGTO (COD_PAGTO),
	CONSTRAINT PK_PV1 PRIMARY KEY (COD_EMPRESA, NUM_PEDIDO)
	);
-- CRIANDO TABELA PEDIDO DE VENDAS ITENS
CREATE TABLE PED_VENDAS_ITENS
	(
	COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT NOT NULL,
	SEQ_MAT INT NOT NULL,
	COD_MAT INT NOT NULL,
	QTD INT NOT NULL,
	VAL_UNIT DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_PVIT1 FOREIGN KEY (COD_EMPRESA, NUM_PEDIDO)
	REFERENCES PED_VENDAS (COD_EMPRESA, NUM_PEDIDO),
	CONSTRAINT PK_PVIT1 PRIMARY KEY (COD_EMPRESA, NUM_PEDIDO, SEQ_MAT)
	);
-- CRIANDO TABELA VENDEDORES
CREATE TABLE VENDEDORES
    (
	COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
 	CONSTRAINT FK_VEND1 FOREIGN KEY (COD_EMPRESA, MATRICULA)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA)
	);
-- CRIANDO TABELA GERENTES
CREATE TABLE GERENTES
    (
	COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
 	CONSTRAINT FK_GER1 FOREIGN KEY (COD_EMPRESA, MATRICULA)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA)
	);
-- CRIANDO TABELA CANAL DE VENDAS RELACIONANDO GERENTE COM VENDEDOR
CREATE TABLE CANAL_VENDAS_G_V
	(
	COD_EMPRESA INT NOT NULL,
	MATRICULA_GER INT NOT NULL,
	MATRICULA_VEND INT,
	CONSTRAINT FK_CGV1 FOREIGN KEY (COD_EMPRESA, MATRICULA_GER)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA),
	CONSTRAINT FK_CGV2 FOREIGN KEY (COD_EMPRESA, MATRICULA_VEND)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA),
	CONSTRAINT PK_CGV1 PRIMARY KEY (COD_EMPRESA, MATRICULA_GER, MATRICULA_VEND)
	);
-- CRIANDO TABELA CANAL DE VENDAS RELACIONANDO VENDEDOR COM CLIENTE
CREATE TABLE CANAL_VENDAS_V_C
	(
	COD_EMPRESA INT NOT NULL,
	MATRICULA_VEND INT NOT NULL,
	ID_CLIENTE INT NOT NULL,
	CONSTRAINT FK_CVC1 FOREIGN KEY (COD_EMPRESA, MATRICULA_VEND)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA),
	CONSTRAINT FK_CVC2 FOREIGN KEY (COD_EMPRESA, ID_CLIENTE)
	REFERENCES CLIENTES (COD_EMPRESA, ID_CLIENTE)
	);
-- CRIANDO TABELA META DE VENDAS
CREATE TABLE META_VENDAS
	(
	COD_EMPRESA INT NOT NULL,
	MATRICULA_VEND INT NOT NULL,
	ANO VARCHAR(4) NOT NULL,
	MES VARCHAR(2) NOT NULL,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_MV1 FOREIGN KEY (COD_EMPRESA, MATRICULA_VEND)
	REFERENCES FUNCIONARIO (COD_EMPRESA, MATRICULA)
	);


-- ÁREA FISCAL --

-- CRIANDO TABELA CÓDIGO DE OPERAÇÕES FISCAIS
CREATE TABLE CFOP
	(
	COD_CFOP VARCHAR(5) NOT NULL PRIMARY KEY,
	DESC_CFOP VARCHAR(255) NOT NULL
	);
-- CRIANDO TABELA NOTA FISCAL
CREATE TABLE NOTA_FISCAL
	(
	COD_EMPRESA INT NOT NULL,
	NUM_NF INT NOT NULL ,
	TIP_NF CHAR(1) NOT NULL, -- (E-ENTRADA, S-SAÍDA)
	COD_CFOP VARCHAR(5) NOT NULL,
	ID_CLIFOR INT NOT NULL,
	COD_PAGTO INT NOT NULL,
	DATA_EMISSAO DATETIME NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	TOTAL_NF DECIMAL(10,2),
	INTEGRADA_FIN CHAR(1) DEFAULT('N'),
	INTEGRADA_SUP CHAR(1) DEFAULT('N'),
	CONSTRAINT FK_NF1 FOREIGN KEY (COD_CFOP)
	REFERENCES CFOP(COD_CFOP),
	CONSTRAINT FK_NF2 FOREIGN KEY (COD_PAGTO)
	REFERENCES COND_PAGTO(COD_PAGTO),
	CONSTRAINT PK_NF1 PRIMARY KEY (COD_EMPRESA, NUM_NF)
	);
-- CRIANDO TABELA NOTA FISCAL ITENS
CREATE TABLE NOTA_FISCAL_ITENS
	(
	COD_EMPRESA INT NOT NULL,
	NUM_NF INT NOT NULL,
	SEQ_MAT INT NOT NULL,
	COD_MAT INT NOT NULL,
	QTD INT NOT NULL,
	VAL_UNIT DECIMAL(10,2) NOT NULL,
	PED_ORIG INT NOT NULL,
	CONSTRAINT FK_NFIT1 FOREIGN KEY (COD_EMPRESA, NUM_NF)
	REFERENCES NOTA_FISCAL(COD_EMPRESA, NUM_NF),
	CONSTRAINT FK_NFIT2 FOREIGN KEY (COD_EMPRESA, COD_MAT) 
	REFERENCES MATERIAL(COD_EMPRESA, COD_MAT),
	);
-- CRIANDO TABELA PARÂMETRO DE INSS
CREATE TABLE PARAM_INSS
	(
	VIGENCIA_INI DATE,
	VIGENCIA_FIM DATE,
	VALOR_DE DECIMAL(10,2) NOT NULL,
	VALOR_ATE DECIMAL(10,2) NOT NULL,
	PCT DECIMAL(10,2) NOT NULL
	);
-- CRIANDO TABELA DE PARÂMETRO DE IRRF
CREATE TABLE PARAM_IRRF
	(
	VIGENCIA_INI DATE,
	VIGENCIA_FIM DATE,
	VALOR_DE DECIMAL(10,2) NOT NULL,
	VALOR_ATE DECIMAL(10,2) NOT NULL,
	PCT DECIMAL(10,2) NOT NULL,
	VAL_ISENT DECIMAL(10,2)
	);
-- CRIANDO TABELA AUDITORIA DE SALÁRIO
CREATE TABLE AUDITORIA_SALARIO
	(
    COD_EMPRESA INT NOT NULL,
	MATRICULA VARCHAR(30) NOT NULL,
	SAL_ANTES DECIMAL(10, 2) NOT NULL,
	SAL_DEPOIS DECIMAL(10, 2) NOT NULL,
	USUARIO VARCHAR(20) NOT NULL,
	DATA_ATUALIZACAO DATETIME NOT NULL
	);
-- CRIANDO TABELA DE PARÂMETROS PARA AUTONUMERAÇÃO
CREATE TABLE PARAMETROS
	(
	COD_EMPRESA INT NOT NULL,
	PARAM VARCHAR(50) NOT NULL,
	VALOR INT NOT NULL,
	CONSTRAINT FK_PARAM1 FOREIGN KEY (COD_EMPRESA)
	REFERENCES EMPRESA(COD_EMPRESA),
	CONSTRAINT PK_PARAM1 PRIMARY KEY (COD_EMPRESA, PARAM)
	);


-- ADICIONANDO CAMPO LOGIN NA TABELA APONTAMENTOS
ALTER TABLE APONTAMENTOS ADD LOGIN VARCHAR(30) NOT NULL;
-- ADICIONANDO CAMPO LOTE NA TABELA APONTAMENTOS
ALTER TABLE APONTAMENTOS ADD LOTE VARCHAR(20) NOT NULL;
-- ADICIONANDO CAMPO LOGIN NA TABELA ESTOQUE_MOV
ALTER TABLE ESTOQUE_MOV ADD LOGIN VARCHAR(30) NOT NULL;