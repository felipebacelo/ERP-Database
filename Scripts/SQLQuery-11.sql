USE ERP;

-- CRIANDO PROCEDURE PARA CALCULAR FOLHA DE PAGAMENTO
CREATE PROCEDURE PROC_FOLHA (@COD_EMPRESA INT, @MES_REF INT, @ANO_REF INT, @DATA_PAGTO DATE)
AS
	BEGIN
		DECLARE @MATRICULA INT,
				@SALARIO_BRUTO DECIMAL(10,2),
				@SALARIO_LIQ DECIMAL(10,2),
				@PCT_INSS DECIMAL(10,2),
				@VAL_INSS DECIMAL(10,2),
				@PCT_IRPF DECIMAL(10,2),
				@VAL_IRPF DECIMAL(10,2),
				@VAL_ISENT_IRPF DECIMAL(10,2)
				
				BEGIN TRANSACTION
					BEGIN TRY
						SELECT 'APAGANDO REGISTROS PARA RECALCULAR'
						DELETE FROM FOLHA_PAGTO
						WHERE COD_EMPRESA = @COD_EMPRESA
						AND MES_REF = @MES_REF
						AND ANO_REF = @ANO_REF
						
						DECLARE SAL_BRUTO CURSOR FOR
						SELECT A.MATRICULA MATRICULA, A.SALARIO SAL_BRUTO
						FROM SALARIO A
							INNER JOIN FUNCIONARIO B
							ON A.COD_EMPRESA = B.COD_EMPRESA
							AND A.MATRICULA = B.MATRICULA
						WHERE A.COD_EMPRESA = @COD_EMPRESA
						AND B.DATE_DEMISS = '1900-01-01'
						AND MONTH(B.DATA_ADMISS) <= @MES_REF
						AND YEAR (B.DATA_ADMISS) <= @ANO_REF
						
						OPEN SAL_BRUTO
							FETCH NEXT FROM SAL_BRUTO
							INTO @MATRICULA, @SALARIO_BRUTO
							WHILE @@FETCH_STATUS = 0
								BEGIN
									SELECT @MATRICULA MATRICULA, @SALARIO_BRUTO SALARIO_BRUTO
									INSERT INTO FOLHA_PAGTO VALUES
									(@COD_EMPRESA, @MATRICULA, 'F', 'P', 'SALÁRIO BRUTO',
									 @MES_REF, @ANO_REF, @DATA_PAGTO, @SALARIO_BRUTO);
									 
									 DECLARE CALC_INSS CURSOR FOR
									 SELECT A.PCT FROM PARAM_INSS A
									 WHERE @SALARIO_BRUTO BETWEEN A.VALOR_DE AND A.VALOR_ATE
									 AND @MES_REF BETWEEN MONTH(A.VIGENCIA_INI) AND MONTH(A.VIGENCIA_FIM)
									 AND @ANO_REF BETWEEN YEAR(A.VIGENCIA_INI) AND YEAR(A.VIGENCIA_FIM)
									 
									 OPEN CALC_INSS
										FETCH NEXT FROM CALC_INSS
										INTO @PCT_INSS
										WHILE @@FETCH_STATUS = 0
											BEGIN
-- REGRA DE TETO DE INSS QUANDO SALÁRIO MAIOR QUE 5531.31
												IF @SALARIO_BRUTO > 5531.31
													BEGIN
														SET @VAL_INSS = 608.44
														SET @PCT_INSS = 0
													END
												ELSE
													BEGIN
														SET @VAL_INSS = @SALARIO_BRUTO / 100 * @PCT_INSS
													END
										SELECT 'CÁLCULO INSS', @PCT_INSS PCT_INSS, @VAL_INSS VAL_INSS
										INSERT INTO FOLHA_PAGTO VALUES
										(@COD_EMPRESA, @MATRICULA, 'F', 'D', 'INSS',
										 @MES_REF, @ANO_REF, @DATA_PAGTO, @VAL_INSS);
										 
										 DECLARE CALC_IRRF CURSOR FOR
										 SELECT A.PCT,A.VAL_ISENT  FROM PARAM_IRRF A
										 WHERE @SALARIO_BRUTO BETWEEN A.VALOR_DE AND A.VALOR_ATE
										 AND @MES_REF BETWEEN MONTH(A.VIGENCIA_INI) AND MONTH(A.VIGENCIA_FIM)
										 AND @ANO_REF BETWEEN YEAR(A.VIGENCIA_INI) AND YEAR(A.VIGENCIA_FIM)
										 
										 OPEN CALC_IRRF
											FETCH NEXT FROM CALC_IRRF
											INTO @PCT_IRPF, @VAL_ISENT_IRPF
											WHILE @@FETCH_STATUS = 0
												BEGIN
-- CALCULANDO IR
													SET @VAL_IRPF = ((@SALARIO_BRUTO - @VAL_INSS) / 100) * @PCT_IRPF - @VAL_ISENT_IRPF
													SELECT 'CÁLCULO IRRF', @PCT_IRPF PCT_IRPF, @VAL_IRPF VAL_IRPF
													INSERT INTO FOLHA_PAGTO VALUES
													(@COD_EMPRESA, @MATRICULA, 'F', 'D', 'IRRF',
													 @MES_REF, @ANO_REF, @DATA_PAGTO, @VAL_IRPF);
													 
													 FETCH NEXT FROM CALC_IRRF
													 INTO @PCT_IRPF, @VAL_ISENT_IRPF
												END
										CLOSE CALC_IRRF
										DEALLOCATE CALC_IRRF
										
											FETCH NEXT FROM CALC_INSS
											INTO @PCT_INSS
										END
									CLOSE CALC_INSS
									DEALLOCATE CALC_INSS
									
									SELECT 'TOTAL DESCONTO', @VAL_INSS + @VAL_IRPF
									SET @SALARIO_LIQ = @SALARIO_BRUTO - (@VAL_INSS + @VAL_IRPF)
									SELECT 'SALÁRIO LÍQUIDO', @SALARIO_LIQ VAL_LIQ
									INSERT INTO FOLHA_PAGTO VALUES
									(@COD_EMPRESA, @MATRICULA, 'F', 'P', 'SALARIO LÍQUIDO',
									 @MES_REF, @ANO_REF, @DATA_PAGTO, @SALARIO_LIQ);
									 
									 FETCH NEXT FROM SAL_BRUTO
									 INTO @MATRICULA, @SALARIO_BRUTO
							END
						CLOSE SAL_BRUTO
						DEALLOCATE SAL_BRUTO

-- VALIDAÇÕES FINAIS
					IF @@ERROR <> 0
						BEGIN
							ROLLBACK
							PRINT 'OPERAÇÃO CANCELADA'
						END
					ELSE
						BEGIN
							PRINT 'OPERAÇÃO FINALIZADA COM SUCESSO'
							COMMIT
						END
					END TRY
						BEGIN CATCH
							PRINT ''
							PRINT 'ERRO OCORREU'
							PRINT 'MENSAGEM: ' + ERROR_MESSAGE()
							PRINT 'PROCEDURE: ' + ERROR_PROCEDURE()
							
							IF (SELECT CURSOR_STATUS('GLOBAL', 'SAL_BRUTO')) = 1
								BEGIN
									CLOSE SAL_BRUTO
									DEALLOCATE SAL_BRUTO
								END
							IF (SELECT CURSOR_STATUS('GLOBAL', 'CALC_INSS')) = 1
								BEGIN
									CLOSE CALC_INSS
									DEALLOCATE CALC_INSS
								END
							IF (SELECT CURSOR_STATUS('GLOBAL', 'CALC_IRRF')) = 1
								BEGIN
									CLOSE CALC_IRRF
									DEALLOCATE CALC_IRRF
								END
								SET XACT_ABORT ON;
								IF @@TRANCOUNT > 0
									ROLLBACK TRANSACTION;
						END CATCH
			END;

-- EXECUTANDO PROCEDURE PROC_FOLHA
EXEC PROC_FOLHA 1, 1, 2018, '05-02-2020';

EXEC PROC_FOLHA 2, 2, 2018, '05-02-2020';